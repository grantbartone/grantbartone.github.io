{"version":3,"sources":["ExpensesApp/LoginModal/logo-icons.svg","connectN/Cell.js","connectN/index.js","ExpensesApp/LoginModal/index.js","ExpensesApp/index.js","GameOfLife/patterns.tsx","GameOfLife/index.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cell","cell","this","props","columnIndex","handleClick","color","getCellColor","className","onClick","Component","ConnectN","isFullColumn","column","length","state","boardHeight","WINNINGROWS","BOARDWIDTH","BOARDHEIGHT","playerTurn","playerOneName","playerTwoName","winningRows","board","Array","fill","isGameOver","isDraw","bind","setState","winnerFlag","row","lastRowIndex","startColumnIndex","Math","max","endColumnIndex","min","countInARow","i","leftDiag","rightDiag","offset","verticalWinner","horizontalWinner","diagonalWinner","push","isPlayerWin","fillCount","fillArr","grid","j","getPlayerTurnName","initNewGame","getDisplayGrid","renderPlayerPrompt","renderInstructions","map","Row","key","LoginModal","dismissLogin","useState","attemptsLeft","setAttemptsLeft","loginHint","setLoginHint","shakeLogin","setShakeLogin","loginFlyAway","setLoginFlyAway","useEffect","document","body","style","loginError","setTimeout","loginSuccessful","id","src","Logo","alt","onSubmit","e","preventDefault","type","name","placeholder","autoFocus","required","value","ExpensifyApp","_","O","GLIDER","GameOfLife","setBoard","intervalRef","setInterval","advance","clearInterval","href","target","rel","start","numLiveNeighbors","x","y","isAlive","xLen","yLen","count","end","liveNeighbors","includes","APP_STATES","App","ReactGA","initialize","pageview","window","location","pathname","search","appState","setAppState","setWelcomeState","handleLoginClick","handleConnectClick","renderCurrentState","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30588d7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-icons.beb6a98d.svg\";","import React, { Component } from 'react';\n\n// Cell class component\nexport class Cell extends Component {\n\tgetCellColor(cell) {\n\t\tif (cell === 1) return \"red\";\n\t\tif (cell === 2) return \"black\";\n\t\treturn \"white\";\n\t}\n\t\n\trender() {\n\t\tconst { cell, columnIndex, handleClick } = this.props;\n\t\tconst color = this.getCellColor(cell);\n\t\treturn (\n\t\t\t<td>\n\t\t\t\t<div className=\"cell\" onClick={() => handleClick(columnIndex)}>\n\t\t\t\t\t<div className={color} />\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport './styles.css';\nimport { Cell } from './Cell';\n\n// ConnectN class component\nexport default class ConnectN extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Set defaults values for winning rows, board width, and board height\n\t\tthis.WINNINGROWS = 4;\n\t\tthis.BOARDWIDTH = 7;\n\t\tthis.BOARDHEIGHT = 6;\n\n\t\tthis.state = {\n\t\t\tplayerTurn: 1,\n\t\t\tplayerOneName: \"Red\",\n\t\t\tplayerTwoName: \"Black\",\n\t\t\twinningRows: this.WINNINGROWS,\n\t\t\tboardHeight: this.BOARDHEIGHT,\n\t\t\tboard: new Array(this.BOARDWIDTH).fill([]),\n\t\t\tisGameOver: false,\n\t\t\tisDraw: false,\n\t\t};\n\t\t\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\tinitNewGame() {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tplayerTurn: 1,\n\t\t\tboard: new Array(this.state.board.length).fill([]),\n\t\t\tisGameOver: false,\n\t\t\tisDraw: false,\n\t\t});\n\t}\n\n\tverticalWinner(board) {\n\t\tfor (let column = 0; column < board.length; column += 1) {\n\t\t\tif (board[column].length < this.state.winningRows) continue;\n\n\t\t\tlet winnerFlag = true;\n\t\t\tfor (let row = 0; row < board[column].length; row += 1) {\n\t\t\t\tif (row < board[column].length - this.state.winningRows) continue;\n\t\t\t\tif (board[column][row] !== this.state.playerTurn) {\n\t\t\t\t\twinnerFlag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (winnerFlag) return this.state.playerTurn;\n\t\t}\n\t\treturn false;\n\t}\n\n\thorizontalWinner(board) {\n\t\tfor (let column = 0; column < board.length; column += 1) {\n\t\t\tif (board[column].length === 0) continue;\n\t\t\tconst lastRowIndex = board[column].length - 1;\n\t\t\tif (board[column][lastRowIndex] !== this.state.playerTurn) continue;\n\n\t\t\tconst startColumnIndex = Math.max(column - this.state.winningRows, 0);\n\t\t\tconst endColumnIndex = Math.min(board.length, column + this.state.winningRows);\n\t\t\tlet countInARow = 0;\n\t\t\tfor (let i = startColumnIndex; i < endColumnIndex; i += 1) {\n\t\t\t\tif (!board[i][lastRowIndex] || board[i][lastRowIndex] !== this.state.playerTurn) {\n\t\t\t\t\tcountInARow = 0;\n\t\t\t\t} else {\n\t\t\t\t\tcountInARow += 1;\n\t\t\t\t\tif (countInARow === this.state.winningRows) return this.state.playerTurn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tdiagonalWinner(board) {\n\t\tfor (let column = 0; column < board.length; column += 1) {\n\t\t\tconst lastRowIndex = board[column].length - 1;\n\t\t\tif (board[column].length < this.state.winningRows ||\n\t\t\t\tboard[column][lastRowIndex] !== this.state.playerTurn) continue;\n\n\t\t\tlet leftDiag = column >= this.state.winningRows - 1;\n\t\t\tlet rightDiag = column <= board.length - this.state.winningRows;\n\t\t\tfor (let offset = 1; offset < this.state.winningRows; offset += 1) {\n\t\t\t\tleftDiag = leftDiag && board[column - offset][lastRowIndex - offset] === this.state.playerTurn;\n\t\t\t\trightDiag = rightDiag && board[column + offset][lastRowIndex - offset] === this.state.playerTurn;\n\t\t\t\tif (!leftDiag && !rightDiag) break;\n\t\t\t}\n\t\t\tif (leftDiag || rightDiag) return this.state.playerTurn;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisPlayerWin(board) {\n\t\treturn (this.verticalWinner(board) // First check for a vertical win in the current row\n\t\t\t|| this.horizontalWinner(board) // Next check if the player is a horizontal winner\n\t\t\t|| this.diagonalWinner(board)); // Finally check if the player is a diagonal winner\n\t}\n\n\tisFullColumn = (column) => column.length === this.state.boardHeight;\n\n\tisDraw(board) {\n\t\tfor (let i = 0; i < board.length; i += 1) {\n\t\t\tif (!this.isFullColumn(board[i])) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\thandleClick(columnIndex) {\n\t\tif (this.state.isGameOver) return;\n\t\tconst board = [...this.state.board];\n\t\tconst column = [...board[columnIndex]];\n\t\tif (this.isFullColumn(column)) return;\n\t\tcolumn.push(this.state.playerTurn);\n\t\tboard[columnIndex] = column;\n\n\t\tconst winner = this.isPlayerWin(board);\n\t\tif (!winner) {\n\t\t\tif (this.isDraw(board)) {\n\t\t\t\t// Draw game: Game Over\n\t\t\t\tthis.setState({\n\t\t\t\t\t...this.state,\n\t\t\t\t\tboard,\n\t\t\t\t\tisGameOver: true,\n\t\t\t\t\tisDraw: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// No winner or Draw: next player's turn\n\t\t\t\tthis.setState({\n\t\t\t\t\t...this.state,\n\t\t\t\t\tboard,\n\t\t\t\t\tplayerTurn: (this.state.playerTurn === 1 ? 2 : 1),\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// Winner: Game Over\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tboard,\n\t\t\t\tisGameOver: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tgetDisplayGrid() {\n\t\t// First, copy the board from state and fill empty spaces with null values\n\t\tconst board = [...this.state.board];\n\t\tfor (let column = 0; column < board.length; column += 1) {\n\t\t\tif (board[column].length < this.state.boardHeight) {\n\t\t\t\tconst fillCount = this.state.boardHeight - board[column].length;\n\t\t\t\tconst fillArr = new Array(fillCount).fill(null);\n\t\t\t\tboard[column] = [...board[column], ...fillArr];\n\t\t\t}\n\t\t}\n\n\t\t// Then, rotate the board 90-degrees\n\t\tconst grid = [];\n\t\tfor (let i = board[0].length - 1; i >= 0; i -= 1) {\n\t\t\tconst row = [];\n\t\t\tfor (let j = 0; j < board.length; j += 1) {\n\t\t\t\trow.push(board[j][i]);\n\t\t\t}\n\t\t\tgrid.push(row);\n\t\t}\n\t\treturn grid;\n\t}\n\n\tgetPlayerTurnName() {\n\t\tif (this.state.playerTurn === 1)\n\t\t\treturn <span className=\"playerRed\">{this.state.playerOneName}</span>;\n\t\telse\n\t\t\treturn <span>{this.state.playerTwoName}</span>;\n\t}\n\n\trenderPlayerPrompt() {\n\t\tif (this.state.isDraw)\n\t\t\treturn <div className=\"playerPrompt\">This game is a draw!</div>;\n\t\telse if (this.state.isGameOver)\n\t\t\treturn <div className=\"playerPrompt\">{this.getPlayerTurnName()} wins!!!</div>;\n\t\telse {\n\t\t\treturn <div className=\"playerPrompt\">Next Player: {this.getPlayerTurnName()}</div>;\n\t\t}\n\t}\n\n\trenderInstructions() {\n\t\tif (this.state.isDraw || this.state.isGameOver)\n\t\t\treturn (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<button className=\"newGame\" onClick={() => this.initNewGame()}>New Game</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\telse\n\t\t\treturn <div className=\"center\">Click any column below to drop a piece</div>;\n\t}\n\n\trender() {\n\t\tconst grid = this.getDisplayGrid();\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Connect 4</h1>\n\t\t\t\t{this.renderPlayerPrompt()}\n\t\t\t\t{this.renderInstructions()}\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{grid.map((row, i) => <Row key={i} row={row} handleClick={this.handleClick} />)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Row function component\nfunction Row(props) {\n\tconst { row, handleClick } = props;\n\treturn (\n\t\t<tr>\n\t\t\t{row.map((cell, i) => <Cell key={i} cell={cell} handleClick={handleClick} columnIndex={i} />)}\n\t\t</tr>\n\t);\n}","import React, { useState, useEffect } from 'react'\nimport './styles.css'\nimport Logo from './logo-icons.svg'\n\n/* Background: Originally built as a take-home project in vanilla JS in 2019, this login component\n * ported to React has a fun, intuitive \"head-shake\" gesture when the authentication fails.\n */\nexport default function LoginModal({ dismissLogin }) {\n    const ANIMATION_TIMEOUT = 500;\n\n    const [ attemptsLeft, setAttemptsLeft ] = useState(3)\n    const [ loginHint, setLoginHint ] = useState(\"\")\n    const [ shakeLogin, setShakeLogin ] = useState(\"\")\n    const [ loginFlyAway, setLoginFlyAway ] = useState(\"\")\n\n    useEffect(() => {\n        // This hack can be cleaned up using head manager library instead of a direct DOM update\n        document.body.style = 'background-color: #37444c; color: white;'\n        return () => document.body.style = 'background-color: null;  color: null'\n    }, [])\n\n    const handleAuthSubmit = (e) => {\n        e.preventDefault()\n        switch(attemptsLeft) {\n            case 3:\n                setLoginHint(\"Login Failed. Please try again.\")\n                loginError()\n                break\n            case 2:\n                setLoginHint(\"Failed again. A couple more tries...\")\n                loginError()\n                break\n            case 1:\n                setLoginHint(\"Cool gesture, right?! Last time!\")\n                loginError()\n                break\n            default: // case 0\n                loginSuccessful()\n                return\n        }\n        setAttemptsLeft(attemptsLeft - 1)\n    }\n\n    const loginError = () => {\n        setShakeLogin(\"shake\", setTimeout(() => setShakeLogin(\"\"), ANIMATION_TIMEOUT))\n    }\n\n    const loginSuccessful = () => setLoginFlyAway(\n        \"flyAway\",\n        setTimeout(() => dismissLogin(), ANIMATION_TIMEOUT)\n    )\n\n    return (\n        <div id=\"loginContent\" className={`${shakeLogin} ${loginFlyAway}`}>\n\t\t<div className=\"loginLogo\">\n\t\t\t<img src={Logo} alt=\"Expensify\" />\n\t\t</div>\n\t\t<form className=\"loginForm\" onSubmit={handleAuthSubmit}>\n\t\t\t<input type=\"email\" name=\"username\" placeholder=\"Email\" autoFocus required />\n\t\t\t<input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n            <div id=\"loginHint\">{loginHint}</div>\n\t\t\t<input type=\"submit\" value=\"Login\" />\n\t\t</form>\n\t</div>\n    )\n}\n","import React from 'react'\nimport LoginModal from './LoginModal'\n\nexport default function ExpensifyApp({ dismissLogin }) {\n    return <LoginModal dismissLogin={dismissLogin} />\n}\n","const _ = false;\nconst O = true;\n\nexport const TOAD:boolean[][] = [\n  [_, _, _, _, _, _],\n  [_, _, _, O, _, _],\n  [_, O, _, _, O, _],\n  [_, O, _, _, O, _],\n  [_, _, O, _, _, _],\n  [_, _, _, _, _, _],\n];\n\nexport const GLIDER:boolean[][] = [\n  [_, _, _, _, _, _],\n  [_, _, O, _, _, _],\n  [_, _, _, O, _, _],\n  [_, O, O, O, _, _],\n  [_, _, _, _, _, _],\n  [_, _, _, _, _, _],\n];\n","import React, { useState, useEffect } from 'react';\nimport './styles.css';\n\nimport { GLIDER } from \"./patterns\";\n\nexport default function GameOfLife() {\n  const [ board, setBoard ] = useState(GLIDER);\n\n  useEffect(() => {\n    const intervalRef = setInterval(() => setBoard(advance(board)), 200)\n    return () => {\n      clearInterval(intervalRef)\n    }\n  }, [board])\n\n  const renderBoard = () => {\n    return (\n      <div>\n        {board.map((row, i) => (\n          <div className=\"row\" key={`${i}`}>\n            {row.map((cell, j) => (\n              <div className={`item ${cell ? 'item--alive' : ''}`} key={`${j}`} />\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">Welcome to the Game... of Life!</div>\n      <div className=\"intro\">\n        <p>\n          This is Grant's \"Game of Life\" challenge built in React! This version auto-advances generations every 200ms.\n        </p>\n        <p>\n          Learn more about the rules of the game <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n        </p>\n      </div>\n      \n      <div>{renderBoard()}</div>\n    </div>\n  );\n}\n\nexport const advance = (start: boolean[][]) => {\n  const numLiveNeighbors = (x: number, y: number) => {\n    const isAlive = (x: number, y: number) => start[x][y] ? 1 : 0;\n    const xLen = start.length, yLen = start[0].length;\n    \n    let count = 0;\n    for (const [offsetX, offsetY] of [ [-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1] ]) {\n      count += isAlive((xLen + x + offsetX) % xLen, (yLen + y + offsetY) % yLen);\n    }\n    return count;\n  }\n\n  const end = [];\n  for (let i = 0; i < start.length; i += 1) {\n    const row = [];\n    for (let j = 0; j < start[0].length; j += 1) {\n      const liveNeighbors = numLiveNeighbors(i, j);\n      if (start[i][j]) { // Alive\n        row.push([2,3].includes(liveNeighbors));\n      } else {\n        row.push(liveNeighbors === 3);\n      }\n    }\n    end.push(row);\n  }\n  return end;\n}\n","import React, { useState } from 'react';\nimport ReactGA from 'react-ga';\nimport './App.css';\nimport ConnectN from './connectN';\nimport ExpensesApp from './ExpensesApp';\nimport GameOfLife from './GameOfLife'\n\nconst APP_STATES = {\n\t'WELCOME': 'welcome',\n\t'CONNECT': 'connect',\n\t'EXPENSES_APP': 'expenses_app',\n}\n\nfunction App() {\n\tinitializeReactGA();\n\tconst [ appState, setAppState ] = useState(APP_STATES.WELCOME)\n\n\tconst setWelcomeState = () => setAppState(APP_STATES.WELCOME)\n\n\tconst handleLoginClick = () => setAppState(APP_STATES.EXPENSES_APP)\n\n\tconst handleConnectClick = () => setAppState(APP_STATES.CONNECT)\n\t\n\tconst renderWelcome = () => (\n\t\t<div className=\"welcome\">\n\t\t\t<div className=\"welcome\">\n\t\t\t\tWelcome to Grant's GithubIO site, where I'm hosting a few random projects I've built\n\t\t\t\tthat are open-source on my <a href=\"https://github.com/grantbartone/hello-world\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>.\n\t\t\t</div>\n\t\t\t<div className=\"welcome\">Pick a button below from some interactive options:</div>\n\t\t\t<div className=\"welcome_buttons\">\n\t\t\t\t<button onClick={handleLoginClick}>Check out my Login UX</button>\n\t\t\t\t<button onClick={handleConnectClick}>Play Connect 4</button>\n\t\t\t</div>\n\t\t\t<GameOfLife />\n\t\t</div>\n\t)\n\n\tconst renderCurrentState = () => {\n\t\tswitch(appState) {\n\t\t\tcase APP_STATES.CONNECT:\n\t\t\t\treturn <ConnectN />\n\t\t\tcase APP_STATES.EXPENSES_APP:\n\t\t\t\treturn <ExpensesApp dismissLogin={setWelcomeState} />\n\t\t\tcase APP_STATES.WELCOME:\n\t\t\tdefault:\n\t\t\t\treturn renderWelcome()\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{renderCurrentState()}\n\t\t\t{/* {appState === APP_STATES.WELCOME && <GameOfLife />} */}\n\t\t\t<div className=\"welcome\">By: Grant Bartone</div>\n\t\t</div>\n\t);\n}\n\nfunction initializeReactGA() {\n\tReactGA.initialize('G-RJDR3ET5KK');\n\tReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\tif (isLocalhost) {\n\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t// service worker/PWA documentation.\n\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\tconsole.log(\n\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\t// Is not localhost. Just register service worker\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker == null) {\n\t\t\treturn;\n\t\t\t}\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t// content until all client tabs are closed.\n\t\t\t\tconsole.log(\n\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t);\n\n\t\t\t\t// Execute callback\n\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t// It's the perfect time to display a\n\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t// Execute callback\n\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t};\n\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t) {\n\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister().then(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// Service worker found. Proceed as normal.\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\tconsole.log(\n\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}